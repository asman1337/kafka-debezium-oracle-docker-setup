-- docker exec -it oracle sqlplus / as sysdba
-- STEP 1 (Check if Logging is enable or not)
SELECT LOG_MODE FROM V$DATABASE;

-- docker exec -it -e ORACLE_SID=TEST oracle sqlplus sys as sysdba
ALTER SYSTEM SET db_recovery_file_dest_size = 10G;
ALTER SYSTEM SET db_recovery_file_dest = '/opt/oracle/oradata/TEST' scope=spfile;
SHUTDOWN IMMEDIATE;
STARTUP MOUNT;
ALTER DATABASE ARCHIVELOG;
ALTER DATABASE OPEN;
ARCHIVE LOG LIST;
-- STEP 2
SELECT GROUP#, BYTES/1024/1024 SIZE_MB, STATUS FROM V$LOG ORDER BY 1;
SELECT GROUP#, MEMBER FROM V$LOGFILE ORDER BY 1, 2;
-- STEP 3
ALTER DATABASE CLEAR LOGFILE GROUP 1;
ALTER DATABASE DROP LOGFILE GROUP 1;
ALTER DATABASE ADD LOGFILE GROUP 1 ('/opt/oracle/oradata/TEST/redo01.log') size 400M REUSE;
ALTER SYSTEM SWITCH LOGFILE;
-- STEP 4
ALTER DATABASE ADD SUPPLEMENTAL LOG DATA;
-- STEP 5
ALTER SESSION SET CONTAINER = CDB$ROOT;
CREATE TABLESPACE LOGMINER_TBS DATAFILE '/opt/oracle/oradata/TEST/logminer_tbs.dbf' SIZE 25M REUSE AUTOEXTEND ON MAXSIZE UNLIMITED;
ALTER SESSION SET CONTAINER = ORCLPDB1;
CREATE TABLESPACE LOGMINER_TBS DATAFILE '/opt/oracle/oradata/TEST/ORCLPDB1/logminer_tbs.dbf' SIZE 25M REUSE AUTOEXTEND ON MAXSIZE UNLIMITED;
ALTER SESSION SET CONTAINER = CDB$ROOT;
-- STEP 6
CREATE USER c##d4rky IDENTIFIED BY d4rky007 DEFAULT TABLESPACE LOGMINER_TBS QUOTA UNLIMITED ON LOGMINER_TBS CONTAINER=ALL;
-- STEP 7
GRANT CREATE SESSION TO c##d4rky CONTAINER=ALL;
GRANT SET CONTAINER TO c##d4rky CONTAINER=ALL;
GRANT SELECT ON V_$DATABASE TO c##d4rky CONTAINER=ALL;
GRANT FLASHBACK ANY TABLE TO c##d4rky CONTAINER=ALL;
GRANT SELECT ANY TABLE TO c##d4rky CONTAINER=ALL;
GRANT SELECT_CATALOG_ROLE TO c##d4rky CONTAINER=ALL;
GRANT EXECUTE_CATALOG_ROLE TO c##d4rky CONTAINER=ALL;
GRANT SELECT ANY TRANSACTION TO c##d4rky CONTAINER=ALL;
GRANT SELECT ANY DICTIONARY TO c##d4rky CONTAINER=ALL;
GRANT LOGMINING TO c##d4rky CONTAINER=ALL;

GRANT CREATE TABLE TO c##d4rky CONTAINER=ALL;
GRANT LOCK ANY TABLE TO c##d4rky CONTAINER=ALL;
GRANT CREATE SEQUENCE TO c##d4rky CONTAINER=ALL;

GRANT EXECUTE ON DBMS_LOGMNR TO c##d4rky CONTAINER=ALL;
GRANT EXECUTE ON DBMS_LOGMNR_D TO c##d4rky CONTAINER=ALL;

GRANT SELECT ON V_$LOG TO c##d4rky CONTAINER=ALL;
GRANT SELECT ON V_$LOG_HISTORY TO c##d4rky CONTAINER=ALL;
GRANT SELECT ON V_$LOGMNR_LOGS TO c##d4rky CONTAINER=ALL;
GRANT SELECT ON V_$LOGMNR_CONTENTS TO c##d4rky CONTAINER=ALL;
GRANT SELECT ON V_$LOGMNR_PARAMETERS TO c##d4rky CONTAINER=ALL;
GRANT SELECT ON V_$LOGFILE TO c##d4rky CONTAINER=ALL;
GRANT SELECT ON V_$ARCHIVED_LOG TO c##d4rky CONTAINER=ALL;
GRANT SELECT ON V_$ARCHIVE_DEST_STATUS TO c##d4rky CONTAINER=ALL;
GRANT SELECT ON V_$TRANSACTION TO c##d4rky CONTAINER=ALL;

-- STEP 8
EXIT;

-- STEP 9 -> TO TEST ONLY
-- USER - asman/d4rky
-- docker exec -it -e ORACLE_SID=ORCLPDB1 oracle sqlplus c##d4rky@ORCLPDB1
-- d4rky007

-- STEP 10
CREATE TABLE techno (id number(9,0) primary key, name varchar2(50));
ALTER TABLE techno ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;
INSERT INTO techno VALUES (1001, 'Asman Mirza');
INSERT INTO techno VALUES (1002, 'Asman Mirza 2');
INSERT INTO techno VALUES (1004, 'Asman Mirza 4');
INSERT INTO techno VALUES (1003, 'Asman', NULL);
INSERT INTO techno VALUES (1004, 'Asman');

CREATE TABLE fake (id number(9,0) primary key);
INSERT INTO fake VALUES (1001);
INSERT INTO fake VALUES (1002);

UPDATE techno SET name = 'Asman Mirza' WHERE id = 1001;
UPDATE techno SET name = 'Updated Asman Mirza' WHERE id = 1001;
DELETE FROM techno WHERE id = 1002;
COMMIT;

DROP TABLE techno;
ALTER TABLE techno ADD email VARCHAR2(100) DEFAULT NULL;
